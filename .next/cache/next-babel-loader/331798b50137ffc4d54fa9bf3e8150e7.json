{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Projets/enclos-front/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport React from 'react';\nimport '../assets/main.scss';\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/patrick/Projets/enclos-front/pages/_app.tsx"],"names":["App","React","MyApp","getInitialProps","Component","router","ctx","pageProps","render","props"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,eAAe,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACnC,eAAaG,eAAb,CAA8B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAA9B,EAA0D;AACtD,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIH,SAAS,CAACD,eAAd,EAA+B;AAC3BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACH;;AAED,WAAO;AAACC,MAAAA;AAAD,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAI;AACN,UAAM;AAACJ,MAAAA,SAAD;AAAYG,MAAAA;AAAZ,QAAyB,KAAKE,KAApC;AACA,WACI,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AAhBkC","sourcesContent":["import App, {Container} from 'next/app'\nimport React from 'react'\nimport '../assets/main.scss'\nexport default class MyApp extends App {\n    static async getInitialProps ({ Component, router, ctx }) {\n        let pageProps = {};\n\n        if (Component.getInitialProps) {\n            pageProps = await Component.getInitialProps(ctx)\n        }\n\n        return {pageProps}\n    }\n\n    render () {\n        const {Component, pageProps} = this.props;\n        return (\n            <Component {...pageProps} />\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}